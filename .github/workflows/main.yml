name: CI
"on":
  push:
    branches:
      - main
    paths:
      - src/**
  workflow_dispatch:
jobs:
  deploy_build:
    name: Build & deploy

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node 17
        uses: actions/setup-node@v1
        with:
          node-version: 17

      - name: Install yarn
        run: npm install --global yarn

      - name: Install dependencies
        run: yarn install

      - name: Setup ssh key
        run: set -eu && mkdir "$HOME/.ssh" && echo "${{ secrets.REMOTE_SSH_KEY }}" > "$HOME/.ssh/key.pem" && chmod 600 "$HOME/.ssh/key.pem"

      - name: Build
        run: yarn build

      - name: Deploy
        run: rsync -e "ssh -p 22 -i $HOME/.ssh/key.pem -o StrictHostKeyChecking=no" --archive --compress --delete . ${{ secrets.ENDPOINT_USER }}@${{ secrets.ENDPOINT_HOST }}:${{ secrets.DESTINATION_DIR }}

  run_deployed_app:
    name: Run app remotely
    runs-on: ubuntu-latest
    needs: deploy_build
    steps:
      - name: Prepare node
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ENDPOINT_HOST }}
          username: ${{ secrets.ENDPOINT_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script_stop: true
          script: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            . ~/.nvm/nvm.sh
            nvm install node
      - name: Install yarn, dependencies and run app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ENDPOINT_HOST }}
          username: ${{ secrets.ENDPOINT_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script_stop: true
          script: |
            pkill node
            cd ${{ secrets.DESTINATION_DIR }}
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            npm install --global yarn
            yarn install
            export VK_SERVICE_TOKEN=${{ secrets.VK_SERVICE_TOKEN }}
            yarn start > app.out.log 2> app.err.log < /dev/null &

